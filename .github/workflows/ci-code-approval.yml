# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: "Code Approval"

on:
  merge_group:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types:
      - opened
      - reopened
      - synchronize # source branch updated

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  golang-ci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    steps:
      # Sets up golang
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}
          cache-dependency-path: "**/*.sum"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "Configure git for private modules"
        env:
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git config --global url."https://x:${GITHUB_API_TOKEN}@github.com".insteadOf "https://github.com"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest
          only-new-issues: true
          args: --verbose --timeout 5m

  code-approval:
    name: "Code Approval"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}
          cache-dependency-path: "**/*.sum"

      - name: deps
        run: go install github.com/bazelbuild/bazelisk@v1.19.0

      - name: Import secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: userpass
          username: ${{ secrets.VAULT_USERNAME }}
          password: ${{ secrets.VAULT_PASSWORD }}
          secrets: |
            ${{ secrets.VAULT_MOUNT }}/data/${{ secrets.VAULT_GCP_SA_NAME }} ${{ secrets.VAULT_GCP_SA_KEY }} | VAULT_GCP_SA_KEY ;

      - name: Service Account File
        id: service-account-file
        run: |
          echo "${{ secrets.VAULT_GCP_SA_KEY }}" > ${{ github.workspace }}/gcp-sa-key.json

      - name: Run Mage
        uses: magefile/mage-action@v3
        with:
          version: latest
          args: -v build:all
        env:
          'GOOGLE_APPLICATION_CREDENTIALS_JSON_PATH': ${{ github.workspace }}/gcp-sa-key.json

  helm-lint:
    name: 'Helm Lint'
    runs-on: [ ubuntu-latest ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Helm lint'
        working-directory: charts/vault-unseal
        run: helm lint .

  yamllint:
    name: 'Yamllint'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: Install yamllint
        run: sudo apt-get install -y yamllint

      - name: 'Run yamllint'
        run: yamllint -c .yamllint .

